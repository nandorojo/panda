/* Layout -> Forms Styles */

.configure {
    position: relative;
    padding: 20px;
    background: $color-foreground;
    color: $color-background;
    font-size: 80%;
    overflow-y: scroll;
    h3 {
        font-weight: normal;
    }
    @include mq($from: tablet) {
        width: $configureWidth;
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
    }
    li {
        @include display-flex;
        @include flex-center-vertical;
        @include justify-content(space-between);
        border: solid 1px rgba(255, 255, 255, 0.2);
        padding: 20px;
        border-width: 0 0 1px;
        cursor: pointer;
        border-left: solid 3px transparent;
        font-size: initial;
        background: $color-foreground;
        &:hover {
            border-left-color: inherit;
        }
    }
    svg {
        stroke: $color-background;
        fill: $color-background;
        padding: 4px;
        width: 20px;
        height: 20px;
        border-radius: 2px;
        @include transition-all;
        &.pencilIcon:hover {
            stroke: $color-foreground;
            fill: $color-foreground;
            background: $color-background;
        }
    }
}

.book {
    font-weight: bold
}

.deck-Editor,
.stack,
.book {
    display: none;
    &.active {
        display: block;
    }
}

.deck-Adder {
    // add new element
    color: $color-primary;
    svg {
        stroke: $color-primary;
    }
}

.configureHeader {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $color-accent;
    @include display-flex;
    @include flex-center-vertical;
    @include justify-content(center);
    height: $configureHeaderHeight;
}

.configureHeaderInner {
    width: 100%;
    height: 100%;
    position: relative;
}

.configureBack {
    position: absolute;
    left: 20px;
    line-height: 1em;
    top: $configureHeaderHeight/2 - 5px;
    cursor: pointer;
}

.configureTitle {
    text-align: center;
}

.configureInner {
    // move it down by the height of the header
    padding-top: $configureHeaderHeight - 10px;
    padding-bottom: $configureHeaderHeight;
}

.configureFooter {
    position: fixed;
    bottom: 0;
    left: 0;
    @include display-flex;
    @include flex-center-vertical;
    width: $configureWidth;
    height: $configureHeaderHeight;
    z-index: 1;
    background: $color-accent;
    padding: 5px;
}

[data-stacktype="deckListNew"] {
    display: none;
    // indicate different color when generating a new element
    li {
        background: $color-accent;
    }
    .pencilIcon {
        // this icon implies editing. don't want it to be visible in the list here, but still want it visible once it's duplicated
        display: none;
    }
}

.dragging {
    .deckListCurrentItems {
        background: $color-primary;
    }
}

.deckListCurrentItem {
    animation: listItemFlash 2s ease;
}

.deckListItemTitle-Editor {
    // this is the input field that lets you edit the title in the list area
    position: absolute;
    width: 65%;
}

.deckDelete {
    margin-top: 5px;
    padding: 20px;
    border: dashed 3px $color-failure;
    border-width: 1px 0;
    border-left: solid 1px transparent;
    @include display-flex;
    @include flex-center-vertical;
    @include justify-content(space-between);
    cursor: pointer;
    svg {
        stroke: $color-failure;
        fill: $color-failure;
    }
    &:hover {
        border-left-color: $color-failure;
        svg {
            background: $color-failure;
            stroke: $color-background;
            fill: $color-background;
        }
    }
}
